# ==========================================================
# Semgrep Ruleset for Ruby on Rails Security
# Created by: Conviso
# Description: This ruleset is designed to detect common
#              vulnerabilities in Ruby on Rails applications, including
#              SQL Injection, XSS, Mass Assignment, Command Injection, 
#              and more. Suggested fixes included.
# ==========================================================

rules:
  - id: detect-sql-injection
    languages: [ruby]
    message: |
      Possible SQL Injection vulnerability. Avoid using unsanitized user input in SQL queries.
      Suggested Fix: Use ActiveRecord's parameterized queries (e.g., where with placeholders).
    severity: ERROR
    patterns:
      - pattern: |
          User.where("name = '#{params[:name]}'")
      - pattern-not: |
          User.where("name = ?", params[:name])
    metadata:
      cwe: CWE-89
      owasp: A1: Injection

  - id: detect-xss
    languages: [ruby]
    message: |
      Possible Cross-Site Scripting (XSS) vulnerability. Avoid outputting unsanitized user input in views.
      Suggested Fix: Use Rails' built-in escaping methods such as `h()` or `sanitize()`.
    severity: ERROR
    patterns:
      - pattern: |
          = params[:input]
      - pattern-not: |
          = h(params[:input])
      - pattern-not: |
          = sanitize(params[:input])
    metadata:
      cwe: CWE-79
      owasp: A7: Cross-Site Scripting (XSS)

  - id: detect-mass-assignment
    languages: [ruby]
    message: |
      Possible Mass Assignment vulnerability. Avoid using unsanitized user input in `new` or `update` without strong parameters.
      Suggested Fix: Use `require` and `permit` with strong parameters to whitelist allowed attributes.
    severity: ERROR
    patterns:
      - pattern: |
          User.new(params[:user])
      - pattern: |
          @user.update(params[:user])
      - pattern-not: |
          User.new(user_params)
      - pattern-not: |
          @user.update(user_params)
    metadata:
      cwe: CWE-915
      owasp: A4: Insecure Design

  - id: detect-command-injection
    languages: [ruby]
    message: |
      Possible Command Injection vulnerability. Avoid using unsanitized user input in system commands.
      Suggested Fix: Use `system()`, `exec()`, or backticks with sanitized inputs or an array to avoid injection risks.
    severity: ERROR
    patterns:
      - pattern: |
          `#{params[:command]}`
      - pattern: |
          system(params[:command])
      - pattern-not: |
          system("safe_command", params[:command])
    metadata:
      cwe: CWE-78
      owasp: A1: Injection

  - id: detect-insecure-deserialization
    languages: [ruby]
    message: |
      Possible insecure deserialization of untrusted data. Avoid deserializing user-controlled input directly.
      Suggested Fix: Use JSON parsing or strong input validation before deserializing.
    severity: ERROR
    patterns:
      - pattern: |
          Marshal.load(params[:data])
    metadata:
      cwe: CWE-502
      owasp: A8: Insecure Deserialization

  - id: detect-sensitive-data-exposure
    languages: [ruby]
    message: |
      Sensitive data exposure. Avoid logging sensitive information such as passwords or credit card numbers.
      Suggested Fix: Mask sensitive data before logging or use Rails' `filter_parameters`.
    severity: WARNING
    patterns:
      - pattern: |
          logger.debug(params[:password])
      - pattern: |
          puts params[:credit_card]
    metadata:
      cwe: CWE-200
      owasp: A3: Sensitive Data Exposure

  - id: detect-weak-encryption
    languages: [ruby]
    message: |
      Weak encryption algorithm detected. Avoid using deprecated cryptographic algorithms like DES.
      Suggested Fix: Use stronger algorithms such as AES with appropriate key sizes (e.g., AES-256).
    severity: ERROR
    patterns:
      - pattern: |
          OpenSSL::Cipher::DES.new
      - pattern: |
          OpenSSL::Cipher::RC4.new
      - pattern-not: |
          OpenSSL::Cipher::AES.new
    metadata:
      cwe: CWE-327
      owasp: A6: Security Misconfiguration
